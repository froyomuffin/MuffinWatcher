#!/bin/bash

SCRIPTDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" # http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in

source $SCRIPTDIR/utils
source $SCRIPTDIR/../CONFIG

# Takes UPDATEDMOD and tweet that it is available!
function tweet-update() {
    UPDATEDMOD=$1
    MESSAGE="\"$UPDATEDMOD\" available for KSP $LATESTVERSION! #KSPModUpdated"
    echo "Sending '$MESSAGE'"

    #t update "$MESSAGE"
}

# Takes NEWREMAININGLIST and dispatches them for a tweet each
function tweet-updates() {
    NEWREMAININGLIST=$*

    for UPDATEDMOD in $NEWREMAININGLIST
    do
        tweet-update $UPDATEDMOD
    done
}

function process() {
    local TWITTERDIR=$1

    echo "Processing Twitter list"

    local REMAININGFILE="$TWITTERDIR/remaininglist"

    if [[ ! -e "$REMAININGFILE" ]]
    then  
        local WATCHLISTFILE="$TWITTERDIR/watchlist"
        cp $WATCHLISTFILE $REMAININGFILE
    fi

    local REMAININGLIST=$(cat $REMAININGFILE | sed 's/ //g' | sed '/^\s*$/d' | sort | uniq)

    # AVAILABLEMODS is populated by the caller
    local UPDATEDMODS=$(get-common "$REMAININGLIST" "$AVAILABLEMODS")

    if [[ ! -z "$UPDATEDMODS" ]] 
    then
        echo "Updated mod(s) found!"
        echo "$(tab-list "$UPDATEDMODS")"

        tweet-updates "$UPDATEDMODS"

        NEWREMAININGLIST=$(filter-list "$REMAININGLIST" "$AVAILABLEMODS")

        # Update the list of remaining mods
        if [[ ! -z "$NEWREMAININGLIST" ]]
        then
            echo "$NEWREMAININGLIST" > $REMAININGFILE
        fi

        UPDATEDSUB=$(filter-list "$SUBSCRIPTION" "$AVAILABLEMODS")
        if [[ ! -z "$UPDATEDSUB" ]]
        then
            echo "$UPDATEDSUB" > $TWITTER
        fi
    fi
}

# Main
TWITTERDIR=$1
process $TWITTERDIR
