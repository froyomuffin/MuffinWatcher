#!/bin/bash

SCRIPTDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" # http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in

source $SCRIPTDIR/../CONFIG

# Takes LIST and EXCLUSIONLIST. Masks away all EXCLUSIONLIST from LIST.
function filter-list() {
    LIST=$(echo "$1" | sort)
    EXCLUSIONLIST=$(echo "$2" | sort)

    diff <(echo "$LIST") <(echo "$EXCLUSIONLIST") | grep "<" | sed 's/^< //g' | sort | uniq
}

# Takes LIST and OTHERLIST. Finds the elements they have in common.
function get-common() {
    LIST=$(echo "$1" | sort)
    OTHERLIST=$(echo "$2" | sort)

    comm -12 <(echo "$LIST") <(echo "$OTHERLIST") | sort | uniq
}

# Takes a MODLIST and a REMAININGMODS and composes a brief message
function compose-message() {
    MODLIST="$1"
    shift
    REMAININGMODS="$*"

    echo "Hello,"
    echo
    echo "The following mods from your watchlist are available for your chosen KSP release:"
    echo "$MODLIST"
    echo

    if [[ -z "$REMAININGMODS" ]]
    then
        echo "There are no more mods left in your watchlist!"
        echo "You have been unsubscribed. For more updates, create a new watchlist."
    else
        echo "The following mods remain on your watchlist:"
        echo "$REMAININGMODS"
    fi

    echo
    echo "Bye!"
}

# Takes an EMAIL and a MESSAGE then sends it out
function send-message() {
    EMAIL=$1
    shift
    MESSAGE="$*"

    echo "$MESSAGE" | mail -s "You have mods!" $EMAIL
}

# Main
[[ ! -e $USERSTORE ]] && mkdir -p $USERSTORE

while true
do
    date

    AVAILABLEMODS=$(cat $REFERENCELIST)

    cd $USERSTORE
    USERLIST=$(ls -l | awk '{ print $NF }' | grep '@' | grep -v 'bak$')

    for USER in $USERLIST
    do
        echo "Processing $USER"

        USERBAK=$USER.bak
        cp $USER $USER.bak

        USERDATA=$(cat $USER | grep -v ' ')

        SUBSCRIPTION=$(cat $USER | sort | uniq)

        UPDATEDMODS=$(get-common "$SUBSCRIPTION" "$AVAILABLEMODS")

        if [[ ! -z "$UPDATEDMODS" ]] 
        then
            UPDATEDSUB=$(filter-list "$SUBSCRIPTION" "$AVAILABLEMODS")
            send-message $USER "$(compose-message "$UPDATEDMODS" "$UPDATEDSUB")"

            if [[ ! -z "$UPDATEDSUB" ]]
            then
                echo "$UPDATEDSUB" > $USER
            else
                rm -f $USER
            fi
        fi

        rm $USER.bak
    done

    sleep 1
done
